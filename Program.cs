using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace TrainDepartureConfigurator
{
    internal class Program
    {
        static void Main(string[] args)
        {
            ConfiguratorDirections configuratorDirections = new ();
            configuratorDirections.ShowMenu();
            configuratorDirections.CreatDeparture();
        }
    }

    class ConfiguratorDirections
    {
        public List<FormedTrainDeparture> formedTrainsDeparture = new();
        public int CursorPositionX = 0;
        public int CursorPositionY = 0;
        private  List<string> textOfMenu = new();
        private readonly List<string> cities = new();
        private readonly List<string> findNames = new();
        private readonly List<Ticket> tickets = new();
        private readonly List<Passenger> GroupPassengers = new();

        public List<string> TextOfMenu { get => textOfMenu; set => textOfMenu = value; }

        public ConfiguratorDirections()
        {
            CreateCities();
            CreateTextMenu();
        }

        public void ShowMenu()
        {
            string changeInMenu;
            bool isWorking = true;

            GetTextMenu(0);
            Console.ReadLine();
            Console.Clear();

            while (isWorking)
            {
                if (formedTrainsDeparture.Count > 0)
                {
                    ShowInformationDepartureLastTrain();
                }

                CursorPositionX = 0;
                CursorPositionY = 0;
                Console.SetCursorPosition(CursorPositionX, CursorPositionY);
                GetTextMenu(1);

                changeInMenu = Console.ReadLine();

                switch (changeInMenu)
                {
                    case "1":
                        CreatDeparture();
                        break;
                    case "2":
                        ShowInformationDepartureAllTrains();
                        break;
                    case "3":
                        isWorking = false;
                        break;
                }
            }
        }

        public void CreatDeparture()
        {
            CursorPositionX = 0;
            CursorPositionY = 2;
            string userInput;
            bool isWork = true;
            bool isRouteSelect = false;
            string cityOfArrival = null;
            string cityOfDeparture = null;
            int numberLineMenu = 3;
            int numberPassengers;
            int numberTicket;

            Console.Clear();
            Console.SetCursorPosition(CursorPositionX, CursorPositionY);

            while (isWork == true)
            {
                GetTextMenu(numberLineMenu);
                GetTextMenu(5);
                userInput = Console.ReadLine();
                if (FindCity(userInput) == false)
                {
                    GetTextMenu(8);
                    isWork = false;
                    isRouteSelect = false;
                    Console.ReadLine();
                }
                else
                {
                    GetTextMenu(6);
                    ShowSelectCities();
                    GetTextMenu(7);
                    userInput = Console.ReadLine();

                    if (GetNumberCity(userInput, out int numberUserInput) == false)
                    {
                        GetTextMenu(8);
                        isWork = false;
                        isRouteSelect = false;
                        Console.ReadLine();
                    }
                    else
                    {
                        if (numberLineMenu == 4)
                        {
                            cityOfArrival = findNames[numberUserInput];

                            if (cityOfDeparture == cityOfArrival)
                            {

                            }
                            else
                            {
                                GetTextMenu(9);
                                isRouteSelect = true;
                                isWork = false;
                                Console.ReadLine();
                                Console.Clear();
                            }
                        }
                        else
                        {
                            cityOfDeparture = findNames[numberUserInput];
                            GetTextMenu(9);
                            numberLineMenu = 4;
                            Console.ReadLine();
                            Console.Clear();
                        }

                    }
                    findNames.Clear();
                }

            }

            if (isRouteSelect == true)
            {

                numberTicket = CreateTickets(cityOfDeparture, cityOfArrival);
                numberPassengers = SellTicket();


                GetTextMenu(11);
                Console.WriteLine(cityOfDeparture);
                GetTextMenu(12);
                Console.WriteLine(cityOfArrival);
                GetTextMenu(13);
                Console.WriteLine(numberPassengers);
                GetTextMenu(15);
                Console.ReadLine();

                formedTrainsDeparture.Add(new FormedTrainDeparture(CreateTrain(numberPassengers), cityOfArrival, cityOfDeparture, numberPassengers));
            }

            Console.Clear();
        }

        static private Train CreateTrain(int numberPassengers)
        {
            return new Train(numberPassengers);

        }

        private bool FindCity(string userInput)
        {
            bool isCityFind = false;

            foreach (var city in cities)
            {
                if (city.ToLower().Contains(userInput.ToLower()))
                {
                    findNames.Add($"{city}");
                    isCityFind = true;
                }
            }

            return isCityFind;
        }

        private void ShowSelectCities()
        {
            int i = 0;

            foreach (var selectName in findNames)
            {
                Console.WriteLine($"{i} - {selectName}");
                i++;
            }

        }

        private bool GetNumberCity(string userInput, out int numberUserInput)
        {
            numberUserInput = 0;
            bool isSelectTrue = false;

            if (int.TryParse(userInput, out int tryNumber) == false | tryNumber > findNames.Count - 1 | tryNumber < 0)
            {
                isSelectTrue = false;
            }
            else
            {
                numberUserInput = tryNumber;
                return isSelectTrue = true;
            }

            return isSelectTrue;
        }

        private void GetTextMenu(int topic)
        {
            ConsoleColor color = ConsoleColor.Green;
            Console.ForegroundColor = color;
            Console.WriteLine(TextOfMenu[topic]);
            Console.ResetColor();
        }

        private int CreateTickets(string cityOfDeparture, string cityOfArrival)
        {
            Random random = new ();
            int minNumberTicket = 81;
            int maxNumberTicket = 946;
            int numberTicket = random.Next(minNumberTicket, maxNumberTicket);

            for (int i = 0; i <= numberTicket; i++)
            {
                tickets.Add(new Ticket(cityOfDeparture, cityOfArrival));
            }

            return numberTicket;
        }

        private int SellTicket()
        {
            Random random = new ();
            int deviationNumberPossibleBuyers = 50;
            int numberPassengers = random.Next(tickets.Count - deviationNumberPossibleBuyers, tickets.Count + deviationNumberPossibleBuyers);

            for (int i = 0; i <= tickets.Count - 1; i++)
            {
                GroupPassengers.Add(new Passenger(tickets[i]));
            }

            return numberPassengers;
        }

        private void ShowInformationDepartureAllTrains()
        {
            Console.Clear();

            if (formedTrainsDeparture.Count != 0)
            {
                foreach (FormedTrainDeparture trainDeparture in formedTrainsDeparture)
                {
                    GetTextMenu(20);
                    ConsoleColor color = ConsoleColor.Red;
                    Console.ForegroundColor = color;
                    Console.WriteLine(formedTrainsDeparture.IndexOf(trainDeparture));
                    GetTextMenu(11);
                    Console.WriteLine(trainDeparture.CityOfDeparture);
                    GetTextMenu(12);
                    Console.WriteLine(trainDeparture.CityOfArrival);
                    GetTextMenu(13);
                    Console.WriteLine(trainDeparture.NumberPassenger);
                    GetTextMenu(16);
                    Console.WriteLine($"{trainDeparture.FormedTrain.NumberWagon}\n\n");
                }
            }
            else
            {
                GetTextMenu(17);
            }

            Console.ReadLine();
            Console.Clear();
        }

        private void ShowInformationDepartureLastTrain()
        {
            Console.Clear();

            CursorPositionX = 1;
            CursorPositionY = 8;

            if (formedTrainsDeparture.Count != 0)
            {
                Console.SetCursorPosition(CursorPositionX, CursorPositionY);
                ConsoleColor color = ConsoleColor.Red;
                Console.ForegroundColor = color;

                FormedTrainDeparture trainDeparture = formedTrainsDeparture.Last();
                {
                    GetTextMenu(11);
                    Console.WriteLine(trainDeparture.CityOfDeparture);
                    GetTextMenu(12);
                    Console.WriteLine(trainDeparture.CityOfArrival);
                    GetTextMenu(13);
                    Console.WriteLine(trainDeparture.NumberPassenger);
                    GetTextMenu(16);
                    Console.WriteLine(trainDeparture.FormedTrain.NumberWagon);
                }

                Console.ResetColor();
            }

        }

        private void CreateCities()
        {

            List<string> allCities = new()
            {
                "Абаза",
"Абакан",
"Абдулино",
"Абинск",
"Агидель",
"Агрыз",
"Адыгейск",
"Азнакаево",
"Азов",
"Ак-Довурак",
"Аксай",
"Алагир",
"Алапаевск",
"Алатырь",
"Алдан",
"Алейск",
"Александров",
"Александровск",
"Александровск-Сахалинский",
"Алексеевка",
"Алексин",
"Алзамай",
"АлупкаОспаривается",
"АлуштаОспаривается",
"Альметьевск",
"Амурск",
"Анадырь",
"Анапа",
"Ангарск",
"Андреаполь",
"Анжеро-Судженск",
"Анива",
"Апатиты",
"Апрелевка",
"Апшеронск",
"Арамиль",
"Аргун",
"Ардатов",
"Ардон",
"Арзамас",
"Аркадак",
"Армавир",
"АрмянскОспаривается",
"Арсеньев",
"Арск",
"Артём",
"Артёмовск",
"Артёмовский",
"Архангельск",
"Асбест",
"Асино",
"Астрахань",
"Аткарск",
"Ахтубинск",
"Ачинск",
"Аша",
"Бабаево",
"Бабушкин",
"Бавлы",
"Багратионовск",
"Байкальск",
"Баймак",
"Бакал",
"Баксан",
"Балабаново",
"Балаково",
"Балахна",
"Балашиха",
"Балашов",
"Балей",
"Балтийск",
"Барабинск",
"Барнаул",
"Барыш",
"Батайск",
"БахчисарайОспаривается",
"Бежецк",
"Белая, Калитва",
"Белая, Холуница",
"Белгород",
"Белебей",
"Белёв",
"Белинский",
"Белово",
"Белогорск",
"БелогорскОспаривается",
"Белозерск",
"Белокуриха",
"Беломорск",
"Белоозёрский",
"Белорецк",
"Белореченск",
"Белоусово",
"Белоярский",
"Белый",
"Бердск",
"Березники",
"Берёзовский",
"Берёзовский",
"Беслан",
"Бийск",
"Бикин",
"Билибино",
"Биробиджан",
"Бирск",
"Бирюсинск",
"Бирюч",
"Благовещенск",
"Благовещенск",
"Благодарный",
"Бобров",
"Богданович",
"Богородицк",
"Богородск",
"Боготол",
"Богучар",
"Бодайбо",
"Бокситогорск",
"Болгар",
"Бологое",
"Болотное",
"Болохово",
"Болхов",
"Большой, Камень",
"Бор",
"Борзя",
"Борисоглебск",
"Боровичи",
"Боровск",
"Бородино",
"Братск",
"Бронницы",
"Брянск",
"Бугульма",
"Бугуруслан",
"Будённовск",
"Бузулук",
"Буинск",
"Буй",
"Буйнакск",
"Бутурлиновка",
"Валдай",
"Валуйки",
"Велиж",
"Великие, Луки",
"Великий, Новгород",
"Великий, Устюг",
"Вельск",
"Венёв",
"Верещагино",
"Верея",
"Верхнеуральск",
"Верхний, Тагил",
"Верхний, Уфалей",
"Верхняя, Пышма",
"Верхняя, Салда",
"Верхняя, Тура",
"Верхотурье",
"Верхоянск",
"Весьегонск",
"Ветлуга",
"Видное",
"Вилюйск",
"Вилючинск",
"Вихоревка",
"Вичуга",
"Владивосток",
"Владикавказ",
"Владимир",
"Волгоград",
"Волгодонск",
"Волгореченск",
"Волжск",
"Волжский",
"Вологда",
"Володарск",
"Волоколамск",
"Волосово",
"Волхов",
"Волчанск",
"Вольск",
"Воркута",
"Воронеж",
"Ворсма",
"Воскресенск",
"Воткинск",
"Всеволожск",
"Вуктыл",
"Выборг",
"Выкса",
"Высоковск",
"Высоцк",
"Вытегра",
"Вышний, Волочёк",
"Вяземский",
"Вязники",
"Вязьма",
"Вятские, Поляны",
"Гаврилов, Посад",
"Гаврилов-Ям",
"Гагарин",
"Гаджиево",
"Гай",
"Галич",
"Гатчина",
"Гвардейск",
"Гдов",
"Геленджик",
"Георгиевск",
"Глазов",
"Голицыно",
"Горбатов",
"Горно-Алтайск",
"Горнозаводск",
"Горняк",
"Городец",
"Городище",
"Городовиковск",
"Гороховец",
"Горячий, Ключ",
"Грайворон",
"Гремячинск",
"Грозный",
"Грязи",
"Грязовец",
"Губаха",
"Губкин",
"Губкинский",
"Гудермес",
"Гуково",
"Гулькевичи",
"Гурьевск",
"Гурьевск",
"Гусев",
"Гусиноозёрск",
"Гусь-Хрустальный",
"Давлеканово",
"Дагестанские, Огни",
"Далматово",
"Дальнегорск",
"Дальнереченск",
"Данилов",
"Данков",
"Дегтярск",
"Дедовск",
"Демидов",
"Дербент",
"Десногорск",
"ДжанкойОспаривается",
"Дзержинск",
"Дзержинский",
"Дивногорск",
"Дигора",
"Димитровград",
"Дмитриев",
"Дмитров",
"Дмитровск",
"Дно",
"Добрянка",
"Долгопрудный",
"Долинск",
"Домодедово",
"Донецк",
"Донской",
"Дорогобуж",
"Дрезна",
"Дубна",
"Дубовка",
"Дудинка",
"Духовщина",
"Дюртюли",
"Дятьково",
"ЕвпаторияОспаривается",
"Егорьевск",
"Ейск",
"Екатеринбург",
"Елабуга",
"Елец",
"Елизово",
"Ельня",
"Еманжелинск",
"Емва",
"Енисейск",
"Ермолино",
"Ершов",
"Ессентуки",
"Ефремов",
"Железноводск",
"Железногорск",
"Железногорск",
"Железногорск-Илимский",
"Жердевка",
"Жигулёвск",
"Жиздра",
"Жирновск",
"Жуков",
"Жуковка",
"Жуковский",
"Завитинск",
"Заводоуковск",
"Заволжск",
"Заволжье",
"Задонск",
"Заинск",
"Закаменск",
"Заозёрный",
"Заозёрск",
"Западная, Двина",
"Заполярный",
"Зарайск",
"Заречный",
"Заречный",
"Заринск",
"Звенигово",
"Звенигород",
"Зверево",
"Зеленогорск",
"Зеленоградск",
"Зеленодольск",
"Зеленокумск",
"Зерноград",
"Зея",
"Зима",
"Златоуст",
"Злынка",
"Змеиногорск",
"Знаменск",
"Зубцов",
"Зуевка",
"Ивангород",
"Иваново",
"Ивантеевка",
"Ивдель",
"Игарка",
"Ижевск",
"Избербаш",
"Изобильный",
"Иланский",
"Инза",
"Иннополис",
"Инсар",
"Инта",
"Ипатово",
"Ирбит",
"Иркутск",
"Исилькуль",
"Искитим",
"Истра",
"Ишим",
"Ишимбай",
"Йошкар-Ола",
"Кадников",
"Казань",
"Калач",
"Калачинск",
"Калач-на-Дону",
"Калининград",
"Калининск",
"Калтан",
"Калуга",
"Калязин",
"Камбарка",
"Каменка",
"Каменногорск",
"Каменск-Уральский",
"Каменск-Шахтинский",
"Камень-на-Оби",
"Камешково",
"Камызяк",
"Камышин",
"Камышлов",
"Канаш",
"Кандалакша",
"Канск",
"Карабаново",
"Карабаш",
"Карабулак",
"Карасук",
"Карачаевск",
"Карачев",
"Каргат",
"Каргополь",
"Карпинск",
"Карталы",
"Касимов",
"Касли",
"Каспийск",
"Катав-Ивановск",
"Катайск",
"Качканар",
"Кашин",
"Кашира",
"Кедровый",
"Кемерово",
"Кемь",
"КерчьОспаривается",
"Кизел",
"Кизилюрт",
"Кизляр",
"Кимовск",
"Кимры",
"Кингисепп",
"Кинель",
"Кинешма",
"Киреевск",
"Киренск",
"Киржач",
"Кириллов",
"Кириши",
"Киров",
"Киров",
"Кировград",
"Кирово-Чепецк",
"Кировск",
"Кировск",
"Кирс",
"Кирсанов",
"Киселёвск",
"Кисловодск",
"Клин",
"Клинцы",
"Княгинино",
"Ковдор",
"Ковров",
"Ковылкино",
"Когалым",
"Кодинск",
"Козельск",
"Козловка",
"Козьмодемьянск",
"Кола",
"Кологрив",
"Коломна",
"Колпашево",
"Кольчугино",
"Коммунар",
"Комсомольск",
"Комсомольск-на-Амуре",
"Конаково",
"Кондопога",
"Кондрово",
"Константиновск",
"Копейск",
"Кораблино",
"Кореновск",
"Коркино",
"Королёв",
"Короча",
"Корсаков",
"Коряжма",
"Костерёво",
"Костомукша",
"Кострома",
"Котельники",
"Котельниково",
"Котельнич",
"Котлас",
"Котово",
"Котовск",
"Кохма",
"Красавино",
"Красноармейск",
"Красноармейск",
"Красновишерск",
"Красногорск",
"Краснодар",
"Краснозаводск",
"Краснознаменск",
"Краснознаменск",
"Краснокаменск",
"Краснокамск",
"КрасноперекопскОспаривается",
"Краснослободск",
"Краснослободск",
"Краснотурьинск",
"Красноуральск",
"Красноуфимск",
"Красноярск",
"Красный, Кут",
"Красный, Сулин",
"Красный, Холм",
"Кремёнки",
"Кропоткин",
"Крымск",
"Кстово",
"Кубинка",
"Кувандык",
"Кувшиново",
"Кудрово",
"Кудымкар",
"Кузнецк",
"Куйбышев",
"Кукмор",
"Кулебаки",
"Кумертау",
"Кунгур",
"Купино",
"Курган",
"Курганинск",
"Курильск",
"Курлово",
"Куровское",
"Курск",
"Куртамыш",
"Курчалой",
"Курчатов",
"Куса",
"Кушва",
"Кызыл",
"Кыштым",
"Кяхта",
"Лабинск",
"Лабытнанги",
"Лагань",
"Ладушкин",
"Лаишево",
"Лакинск",
"Лангепас",
"Лахденпохья",
"Лебедянь",
"Лениногорск",
"Ленинск",
"Ленинск-Кузнецкий",
"Ленск",
"Лермонтов",
"Лесной",
"Лесозаводск",
"Лесосибирск",
"Ливны",
"Ликино-Дулёво",
"Липецк",
"Липки",
"Лиски",
"Лихославль",
"Лобня",
"Лодейное, Поле",
"Лосино-Петровский",
"Луга",
"Луза",
"Лукоянов",
"Луховицы",
"Лысково",
"Лысьва",
"Лыткарино",
"Льгов",
"Любань",
"Люберцы",
"Любим",
"Людиново",
"Лянтор",
"Магадан",
"Магас",
"Магнитогорск",
"Майкоп",
"Майский",
"Макаров",
"Макарьев",
"Макушино",
"Малая, Вишера",
"Малгобек",
"Малмыж",
"Малоархангельск",
"Малоярославец",
"Мамадыш",
"Мамоново",
"Мантурово",
"Мариинск",
"Мариинский, Посад",
"Маркс",
"Махачкала",
"Мглин",
"Мегион",
"Медвежьегорск",
"Медногорск",
"Медынь",
"Межгорье",
"Междуреченск",
"Мезень",
"Меленки",
"Мелеуз",
"Менделеевск",
"Мензелинск",
"Мещовск",
"Миасс",
"Микунь",
"Миллерово",
"Минеральные, Воды",
"Минусинск",
"Миньяр",
"Мирный",
"Мирный",
"Михайлов",
"Михайловка",
"Михайловск",
"Михайловск",
"Мичуринск",
"Могоча",
"Можайск",
"Можга",
"Моздок",
"Мончегорск",
"Морозовск",
"Моршанск",
"Мосальск",
"Москва",
"Муравленко",
"Мураши",
"Мурино",
"Мурманск",
"Муром",
"Мценск",
"Мыски",
"Мытищи",
"Мышкин",
"Набережные, Челны",
"Навашино",
"Наволоки",
"Надым",
"Назарово",
"Назрань",
"Называевск",
"Нальчик",
"Нариманов",
"Наро-Фоминск",
"Нарткала",
"Нарьян-Мар",
"Находка",
"Невель",
"Невельск",
"Невинномысск",
"Невьянск",
"Нелидово",
"Неман",
"Нерехта",
"Нерчинск",
"Нерюнгри",
"Нестеров",
"Нефтегорск",
"Нефтекамск",
"Нефтекумск",
"Нефтеюганск",
"Нея",
"Нижневартовск",
"Нижнекамск",
"Нижнеудинск",
"Нижние, Серги",
"Нижний, Ломов",
"Нижний, Новгород",
"Нижний, Тагил",
"Нижняя, Салда",
"Нижняя, Тура",
"Николаевск",
"Николаевск-на-Амуре",
"Никольск",
"Никольск",
"Никольское",
"Новая, Ладога",
"Новая, Ляля",
"Новоалександровск",
"Новоалтайск",
"Новоаннинский",
"Нововоронеж",
"Новодвинск",
"Новозыбков",
"Новокубанск",
"Новокузнецк",
"Новокуйбышевск",
"Новомичуринск",
"Новомосковск",
"Новопавловск",
"Новоржев",
"Новороссийск",
"Новосибирск",
"Новосиль",
"Новосокольники",
"Новотроицк",
"Новоузенск",
"Новоульяновск",
"Новоуральск",
"Новохопёрск",
"Новочебоксарск",
"Новочеркасск",
"Новошахтинск",
"Новый, Оскол",
"Новый, Уренгой",
"Ногинск",
"Нолинск",
"Норильск",
"Ноябрьск",
"Нурлат",
"Нытва",
"Нюрба",
"Нягань",
"Нязепетровск",
"Няндома",
"Облучье",
"Обнинск",
"Обоянь",
"Обь",
"Одинцово",
"Озёрск",
"Озёрск",
"Озёры",
"Октябрьск",
"Октябрьский",
"Окуловка",
"Олёкминск",
"Оленегорск",
"Олонец",
"Омск",
"Омутнинск",
"Онега",
"Опочка",
"Орёл",
"Оренбург",
"Орехово-Зуево",
"Орлов",
"Орск",
"Оса",
"Осинники",
"Осташков",
"Остров",
"Островной",
"Острогожск",
"Отрадное",
"Отрадный",
"Оха",
"Оханск",
"Очёр",
"Павлово",
"Павловск",
"Павловский, Посад",
"Палласовка",
"Партизанск",
"Певек",
"Пенза",
"Первомайск",
"Первоуральск",
"Перевоз",
"Пересвет",
"Переславль-Залесский",
"Пермь",
"Пестово",
"Петров, Вал",
"Петровск",
"Петровск-Забайкальский",
"Петрозаводск",
"Петропавловск-Камчатский",
"Петухово",
"Петушки",
"Печора",
"Печоры",
"Пикалёво",
"Пионерский",
"Питкяранта",
"Плавск",
"Пласт",
"Плёс",
"Поворино",
"Подольск",
"Подпорожье",
"Покачи",
"Покров",
"Покровск",
"Полевской",
"Полесск",
"Полысаево",
"Полярные, Зори",
"Полярный",
"Поронайск",
"Порхов",
"Похвистнево",
"Почеп",
"Починок",
"Пошехонье",
"Правдинск",
"Приволжск",
"Приморск",
"Приморск",
"Приморско-Ахтарск",
"Приозерск",
"Прокопьевск",
"Пролетарск",
"Протвино",
"Прохладный",
"Псков",
"Пугачёв",
"Пудож",
"Пустошка",
"Пучеж",
"Пушкино",
"Пущино",
"Пыталово",
"Пыть-Ях",
"Пятигорск",
"Радужный",
"Радужный",
"Райчихинск",
"Раменское",
"Рассказово",
"Ревда",
"Реж",
"Реутов",
"Ржев",
"Родники",
"Рославль",
"Россошь",
"Ростов",
"Ростов-на-Дону",
"Рошаль",
"Ртищево",
"Рубцовск",
"Рудня",
"Руза",
"Рузаевка",
"Рыбинск",
"Рыбное",
"Рыльск",
"Ряжск",
"Рязань",
"СакиОспаривается",
"Салават",
"Салаир",
"Салехард",
"Сальск",
"Самара",
"Санкт-Петербург",
"Саранск",
"Сарапул",
"Саратов",
"Саров",
"Сасово",
"Сатка",
"Сафоново",
"Саяногорск",
"Саянск",
"Светлогорск",
"Светлоград",
"Светлый",
"Светогорск",
"Свирск",
"Свободный",
"Себеж",
"СевастопольОспаривается",
"Северобайкальск",
"Северодвинск",
"Северо-Курильск",
"Североморск",
"Североуральск",
"Северск",
"Севск",
"Сегежа",
"Сельцо",
"Семёнов",
"Семикаракорск",
"Семилуки",
"Сенгилей",
"Серафимович",
"Сергач",
"Сергиев, Посад",
"Сердобск",
"Серов",
"Серпухов",
"Сертолово",
"Сибай",
"Сим",
"СимферопольОспаривается",
"Сковородино",
"Скопин",
"Славгород",
"Славск",
"Славянск-на-Кубани",
"Сланцы",
"Слободской",
"Слюдянка",
"Смоленск",
"Снежинск",
"Снежногорск",
"Собинка",
"Советск",
"Советск",
"Советск",
"Советская, Гавань",
"Советский",
"Сокол",
"Солигалич",
"Соликамск",
"Солнечногорск",
"Сольвычегодск",
"Соль-Илецк",
"Сольцы",
"Сорочинск",
"Сорск",
"Сортавала",
"Сосенский",
"Сосновка",
"Сосновоборск",
"Сосновый, Бор",
"Сосногорск",
"Сочи",
"Спас-Деменск",
"Спас-Клепики",
"Спасск",
"Спасск-Дальний",
"Спасск-Рязанский",
"Среднеколымск",
"Среднеуральск",
"Сретенск",
"Ставрополь",
"Старая, Купавна",
"Старая, Русса",
"Старица",
"Стародуб",
"Старый, КрымОспаривается",
"Старый, Оскол",
"Стерлитамак",
"Стрежевой",
"Строитель",
"Струнино",
"Ступино",
"Суворов",
"СудакОспаривается",
"Суджа",
"Судогда",
"Суздаль",
"Сунжа",
"Суоярви",
"Сураж",
"Сургут",
"Суровикино",
"Сурск",
"Сусуман",
"Сухиничи",
"Сухой, Лог",
"Сызрань",
"Сыктывкар",
"Сысерть",
"Сычёвка",
"Сясьстрой",
"Тавда",
"Таганрог",
"Тайга",
"Тайшет",
"Талдом",
"Талица",
"Тамбов",
"Тара",
"Тарко-Сале",
"Таруса",
"Татарск",
"Таштагол",
"Тверь",
"Теберда",
"Тейково",
"Темников",
"Темрюк",
"Терек",
"Тетюши",
"Тимашёвск",
"Тихвин",
"Тихорецк",
"Тобольск",
"Тогучин",
"Тольятти",
"Томари",
"Томмот",
"Томск",
"Топки",
"Торжок",
"Торопец",
"Тосно",
"Тотьма",
"Трёхгорный",
"Троицк",
"Трубчевск",
"Туапсе",
"Туймазы",
"Тула",
"Тулун",
"Туран",
"Туринск",
"Тутаев",
"Тында",
"Тырныауз",
"Тюкалинск",
"Тюмень",
"Уварово",
"Углегорск",
"Углич",
"Удачный",
"Удомля",
"Ужур",
"Узловая",
"Улан-Удэ",
"Ульяновск",
"Унеча",
"Урай",
"Урень",
"Уржум",
"Урус-Мартан",
"Урюпинск",
"Усинск",
"Усмань",
"Усолье",
"Усолье-Сибирское",
"Уссурийск",
"Усть-Джегута",
"Усть-Илимск",
"Усть-Катав",
"Усть-Кут",
"Усть-Лабинск",
"Устюжна",
"Уфа",
"Ухта",
"Учалы",
"Уяр",
"Фатеж",
"ФеодосияОспаривается",
"Фокино",
"Фокино",
"Фролово",
"Фрязино",
"Фурманов",
"Хабаровск",
"Хадыженск",
"Ханты-Мансийск",
"Харабали",
"Харовск",
"Хасавюрт",
"Хвалынск",
"Хилок",
"Химки",
"Холм",
"Холмск",
"Хотьково",
"Цивильск",
"Цимлянск",
"Циолковский",
"Чадан",
"Чайковский",
"Чапаевск",
"Чаплыгин",
"Чебаркуль",
"Чебоксары",
"Чегем",
"Чекалин",
"Челябинск",
"Чердынь",
"Черемхово",
"Черепаново",
"Череповец",
"Черкесск",
"Чёрмоз",
"Черноголовка",
"Черногорск",
"Чернушка",
"Черняховск",
"Чехов",
"Чистополь",
"Чита",
"Чкаловск",
"Чудово",
"Чулым",
"Чусовой",
"Чухлома",
"Шагонар",
"Шадринск",
"Шали",
"Шарыпово",
"Шарья",
"Шатура",
"Шахты",
"Шахунья",
"Шацк",
"Шебекино",
"Шелехов",
"Шенкурск",
"Шилка",
"Шимановск",
"Шиханы",
"Шлиссельбург",
"Шумерля",
"Шумиха",
"Шуя",
"Щёкино",
"ЩёлкиноОспаривается",
"Щёлково",
"Щигры",
"Щучье",
"Электрогорск",
"Электросталь",
"Электроугли",
"Элиста",
"Энгельс",
"Эртиль",
"Югорск",
"Южа",
"Южно-Сахалинск",
"Южно-Сухокумск",
"Южноуральск",
"Юрга",
"Юрьевец",
"Юрьев-Польский",
"Юрюзань",
"Юхнов",
"Ядрин",
"Якутск",
"ЯлтаОспаривается",
"Ялуторовск",
"Янаул",
"Яранск",
"Яровое",
"Ярославль",
"Ярцево",
"Ясногорск",
"Ясный",
"Яхрома",
            };

            foreach (string city in allCities)
            {
                cities.Add(city);
            }
        }

        private void CreateTextMenu()
        {
            List<string> Menuline = new()
            {
                "    Добро пожаловать в Конфигуратор Пассажирских Поездов! ",
                "    Здесь вы можете :\n    1 - Cоздать новое отправление.\n    2 - Получить информацию о графике всех отправлений.\n    3 - Завершение работы.",
                "    Выберите направления\n\n   Для выбора направления вам необходимо указать \n  1 - Пункт отправления и пункт прибытия \n  2 - Рандомное создание",
                "    Выбор города отправления\n",
                "    Выбор города прибытия\n",
                "    Введите название города",
                "    Найдены следующие совпадения:\n",
                "    Выберете номер города:\n",
                "    Вы ввели не верные данные\n",
                "    Город выбран\n",
                "    Сформировано отправление:\n",
                "    Город отправления - ",
                "       =====>  \n   Город прибытия - ",
                "    Всго пассажиров:",
                "    Всго билетов: ",
                "    Отправление сформировано\n",
                "    Количество вагонов:  ",
                "    Отправления еще не сформированы\n",
                "    Всего билетов не продано:\n",
                "    Город отправления не может быть городом прибытия\n",
                "    Номер отправления: "

            };

            foreach (string line in Menuline)
            {
                TextOfMenu.Add(line);
            }
        }
    }

    class Train
    {
        public int NumberWagon { get; private set; }
        public int totalNumberPassengers { get; private set; }

        private List<Wagon> composition = new();

        public Train(int NumberPassengers)
        {
            totalNumberPassengers = NumberPassengers;
            FormationComposition(NumberPassengers);
            NumberWagon = composition.Count;
        }

        private void FormationComposition(int Number)
        {
            Random random = new ();
            int type;
            int number;
            string[] typeName = { "Вагон с общими местами", "Вагон плацкартный", "Вагон купейный" };

            Dictionary<string, int> typeWagon = new()
            {
                {typeName[0],81 } ,
                {typeName[1],54 },
                {typeName[2],36 }
            };

            while (Number >= 0)
            {
                if (Number > 0)
                {
                    type = random.Next(1, typeWagon.Count);
                    composition.Add(new Wagon(typeWagon[typeName[type]], typeName[type]));
                    number = typeWagon[typeName[type]];
                    Number = Number - number;

                }
            }
        }
    }

    class Passenger
    {
        Ticket ticket;

        public Passenger(Ticket purchasedTicket)
        {
            ticket = purchasedTicket;
        }
    }

    class Ticket
    {
        string CityOfDeparture;
        string CityOfArrival;

        public Ticket(string cityOfDeparture, string cityOfArrival)
        {
            CityOfDeparture = cityOfDeparture;
            CityOfArrival = cityOfArrival;
        }
    }

    class Wagon
    {
        public int numberPassengers;
        public string typeName;

        public Wagon(int number, string type)
        {
            numberPassengers = number;
            typeName = type;
        }
    }

    class FormedTrainDeparture
    {
        public Train FormedTrain { get; private set; }
        public string CityOfArrival { get; private set; }
        public string CityOfDeparture { get; private set; }
        public int NumberPassenger { get; private set; }

        public FormedTrainDeparture(Train train, string cityOfArrival, string cityOfDeparture, int numberPassenger)
        {
            FormedTrain = train;
            CityOfArrival = cityOfArrival;
            CityOfDeparture = cityOfDeparture;
            NumberPassenger = numberPassenger;
        }
    }
}

